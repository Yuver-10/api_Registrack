# archivo.routes.js
router.post(
router.get(
router.get(

# citas.routes.js
router.get("/", roleMiddleware(["administrador", "empleado", "cliente"]), getCitas);
router.post("/", roleMiddleware(["administrador", "empleado", "cliente"]), createCita);
router.put("/:id/reprogramar", roleMiddleware(["administrador", "empleado", "cliente"]), reprogramarCita);
router.put("/:id/anular", roleMiddleware(["administrador", "empleado", "cliente"]), anularCita);
router.get("/reporte/excel", roleMiddleware(["administrador", "empleado"]), descargarReporteCitas);

# cliente.routes.js
router.get("/", roleMiddleware(["administrador", "empleado"]), listarClientes);
router.get("/:id", roleMiddleware(["administrador", "empleado", "cliente"]), obtenerCliente);
router.post("/", roleMiddleware(["administrador", "empleado"]), crearCliente);
router.put("/:id", roleMiddleware(["administrador", "empleado"]), editarCliente);
router.delete("/:id", roleMiddleware(["administrador"]), borrarCliente);
router.get("/reporte/excel", roleMiddleware(["administrador", "empleado"]), descargarReporteClientes);

# detalleOrden.routes.js
router.get(
router.post(
router.put(

# detalleProceso.routes.js
router.get(
router.post(
router.put(
router.delete(

# empleado.routes.js
router.get("/", getAllEmpleados);
router.get("/:id", getEmpleadoById);
router.post("/", createEmpleado);
router.put("/:id", updateEmpleado);
router.patch("/:id/estado", changeEmpleadoState);
router.delete("/:id", deleteEmpleado);
router.get("/reporte/excel", descargarReporteEmpleados);

# empresa.routes.js
router.get("/:id/clientes", roleMiddleware(["administrador", "empleado"]), listarClientesDeEmpresa);
router.get("/nit/:nit/clientes", roleMiddleware(["administrador", "empleado"]), listarClientesDeEmpresaPorNit);

# formularioDinamico.routes.js
router.post(
router.get(
router.get(
router.get(
router.get(

# pago.routes.js
router.get("/", authMiddleware, roleMiddleware(["administrador", "empleado"]), PagoController.getAll);
router.get("/:id", authMiddleware, roleMiddleware(["administrador", "empleado"]), PagoController.getById);
router.post("/", authMiddleware, roleMiddleware(["administrador", "empleado"]), PagoController.create);
router.get(
router.get(

# permiso.routes.js
router.post(
router.get(
router.get(
router.put(
router.delete(

# privilegio.routes.js
router.post('/', roleMiddleware(["administrador"]), createPrivilegioValidation, privilegioController.createPrivilegio);
router.get('/', roleMiddleware(["administrador"]), privilegioController.getAllPrivilegios);
router.get('/:id', roleMiddleware(["administrador"]), idParamValidation, privilegioController.getPrivilegioById);
router.put('/:id', roleMiddleware(["administrador"]), updatePrivilegioValidation, privilegioController.updatePrivilegio);
router.delete('/:id', roleMiddleware(["administrador"]), idParamValidation, privilegioController.deletePrivilegio);

# role.routes.js
router.get('/', authMiddleware, roleMiddleware(["administrador"]), getRoles);
router.post('/', authMiddleware, roleMiddleware(["administrador"]), createRoleValidation, validateResults, createRole);
router.get('/:id', authMiddleware, roleMiddleware(["administrador"]), getRoleById);
router.put('/:id', authMiddleware, roleMiddleware(["administrador"]), updateRoleValidation, validateResults, updateRole);
router.patch('/:id/state', authMiddleware, roleMiddleware(["administrador"]), validateResults, changeRoleState);
router.delete('/:id', authMiddleware, roleMiddleware(["administrador"]), deleteRoleValidation, validateResults, deleteRole);

# seguimiento.routes.js
router.get(
router.post(
router.get(
router.put(
router.delete(
router.get(

# servicio.routes.js
router.get("/", getAllServicios);
router.get("/buscar", buscarServiciosPorNombre);
router.get(
router.get("/:id", getServicioById);
router.get("/:id/detalle", getDetalleServicio);
router.put(
router.patch(
router.patch(
router.get("/:idServicio/procesos", obtenerProcesos); // Público para consultar
router.put(

# servicioProceso.routes.js
router.get(
router.post(
router.delete(

# solicitudes.routes.js
router.post(
router.get(
router.get(
// router.get(
// router.get(
router.get(
router.get(
router.put(
router.put(

# solicitud_cita.routes.js
router.post("/", authMiddleware, roleMiddleware(["cliente"]), crearSolicitud);
router.get("/mis-solicitudes", authMiddleware, roleMiddleware(["cliente"]), verMisSolicitudes);
router.get("/", authMiddleware, roleMiddleware(["administrador", "empleado"]), getAllSolicitudes);
router.put("/:id/gestionar", authMiddleware, roleMiddleware(["administrador", "empleado"]), gestionarSolicitud);

# tipoArchivo.routes.js
router.get("/", authMiddleware, roleMiddleware(["administrador", "empleado"]), controller.getAll);
router.post("/", authMiddleware, roleMiddleware(["administrador", "empleado"]), validateCreateTipo, controller.create);
router.put("/:id", authMiddleware, roleMiddleware(["administrador", "empleado"]), validateUpdateTipo, controller.update);
router.delete("/:id", authMiddleware, roleMiddleware(["administrador"]), validateIdTipo, controller.remove);

# usuario.routes.js
router.post('/registrar', validarNuevoUsuario, register);
router.post('/login', login);
router.post('/forgot-password', validarForgotPassword, forgotPassword);
router.post('/reset-password', validarResetPassword, resetPassword);
router.get('/', authMiddleware, roleMiddleware(["administrador", "empleado"]), getUsuarios);
router.get('/:id', authMiddleware, roleMiddleware(["administrador", "empleado"]), getUsuarioPorId);
router.delete('/:id', authMiddleware, roleMiddleware(["administrador", "empleado"]), deleteUsuario);
router.put('/:id', authMiddleware, validarActualizarUsuario, updateUsuario);
router.put('/cambiar-estado/:id', authMiddleware, roleMiddleware(["administrador"]), changeUserStatus);
router.post('/crear', authMiddleware, roleMiddleware(["administrador"]), validarCrearUsuarioPorAdmin, createUserByAdmin);

